{"version":3,"file":"static/js/952.31288091.chunk.js","mappings":"gRAIaA,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAaA,OACE,UAACC,EAAD,CAAQJ,SARW,SAAAK,GACnBA,EAAMC,iBAENN,EAASE,GACTC,EAAS,KAIT,WACE,SAACI,EAAD,CACEC,SAdoB,SAAAH,GACxBF,EAASE,EAAMI,cAAcC,MAAMC,gBAc/BD,MAAOR,EACPU,UAAU,QACVC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,8BAEd,SAACC,EAAD,CAAUJ,KAAK,SAAf,wBASAT,EAASc,EAAAA,GAAAA,KAAH,iPAYNX,EAAUW,EAAAA,GAAAA,MAAH,6HAQPD,EAAWC,EAAAA,GAAAA,OAAH,sK,qDCEd,EAnDe,WAAO,IAAD,EACnB,GAAkCjB,EAAAA,EAAAA,UAAS,IAA3C,eAAOkB,EAAP,KAAkBC,EAAlB,KACA,GAAwCnB,EAAAA,EAAAA,WAAS,GAAjD,eAAOoB,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACAC,QAAQC,IAAIN,GACZ,IAAMrB,EAAK,UAAGwB,EAAaI,IAAI,iBAApB,QAAiC,GA+B5C,OAnBAC,EAAAA,EAAAA,YAAU,WACR,GAAK7B,EAAL,CAEA,IAAM8B,EAAO,mCAAG,oGAEZV,GAAgB,GAFJ,UAGeW,EAAAA,EAAAA,IAAa/B,GAH5B,OAIgB,KADtBgC,EAHM,QAIKC,SACfC,EAAAA,GAAAA,MAAA,qCACAhB,EAAa,KAEfA,GAAa,OAAIc,IARL,yEAWZZ,GAAgB,GAXJ,4EAAH,qDAcbU,OACC,CAAC9B,KAEF,UAACmC,EAAD,YACE,SAACtC,EAAD,CAAWC,SA/BU,SAAAE,GACvB,GAAqB,KAAjBA,EAAMoC,OAIR,OAHAF,EAAAA,GAAAA,MAAY,SACZhB,EAAa,SACbO,EAAgB,IAGlBA,EAAgB,CAAEY,OAAQrC,OAyBvBmB,IAAgB,SAACmB,EAAA,EAAD,IAChBrB,EAAUgB,OAAS,IAClB,iCACE,wCACA,SAACM,EAAA,EAAD,CAAWC,YAAavB,EAAWI,SAAUA,WASjDc,EAASnB,EAAAA,GAAAA,KAAH","sources":["components/Searchbar.jsx","pages/Movies.js"],"sourcesContent":["import { useState } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nexport const Searchbar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleQueryChange = event => {\n    setQuery(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <MyForm onSubmit={handleSubmit}>\n      <MyInput\n        onChange={handleQueryChange}\n        value={query}\n        className=\"input\"\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"search the secret movies\"\n      />\n      <MyButton type=\"submit\">search</MyButton>\n    </MyForm>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nconst MyForm = styled.form`\n  margin: 15px auto;\n  padding: 5px;\n  width: 1190px;\n  background-color: rgba(12, 12, 12, 0.428);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-family: monospace;\n  height: 50px;\n`;\n\nconst MyInput = styled.input`\n  height: 30px;\n  border: none;\n  width: 300px;\n  padding-left: 15px;\n  font-family: monospace;\n`;\n\nconst MyButton = styled.button`\n  cursor: pointer;\n  font-family: monospace;\n  margin-left: 10px;\n  height: 34px;\n  &:hover {\n    opacity: 1;\n    color: #2c888b;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { Searchbar } from '../components/Searchbar';\nimport { MovieList } from 'components/MovieList';\nimport { fetchByQuery } from 'servise/fetchMovie';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { Loader } from 'components/Loader';\nimport styled from 'styled-components';\nimport { toast } from 'react-hot-toast';\n\nconst Movies = () => {\n  const [queryList, setQueryList] = useState([]);\n  const [loaderActive, setLoaderActive] = useState(false);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  console.log(location);\n  const query = searchParams.get('search') ?? '';\n\n  const handleFormSubmit = query => {\n    if (query.trim() === '') {\n      toast.error('empty');\n      setQueryList([]);\n      setSearchParams({});\n      return;\n    }\n    setSearchParams({ search: query });\n  };\n\n  useEffect(() => {\n    if (!query) return;\n\n    const getData = async () => {\n      try {\n        setLoaderActive(true);\n        const searchResult = await fetchByQuery(query);\n        if (searchResult.length === 0) {\n          toast.error(`come on.. type something normal !`);\n          setQueryList([]);\n        }\n        setQueryList([...searchResult]);\n      } catch (error) {\n      } finally {\n        setLoaderActive(false);\n      }\n    };\n    getData();\n  }, [query]);\n  return (\n    <MyList>\n      <Searchbar onSubmit={handleFormSubmit} />\n      {loaderActive && <Loader />}\n      {queryList.length > 0 && (\n        <>\n          <h2>movie list</h2>\n          <MovieList moviesArray={queryList} location={location} />\n        </>\n      )}\n    </MyList>\n  );\n};\n\nexport default Movies;\n\nconst MyList = styled.main`\n  margin: auto;\n  padding-top: 80px;\n  padding-bottom: 10px;\n  width: 1200px;\n\n  min-height: 100vh;\n  text-align: center;\n`;\n"],"names":["Searchbar","onSubmit","useState","query","setQuery","MyForm","event","preventDefault","MyInput","onChange","currentTarget","value","toLowerCase","className","type","autoComplete","autoFocus","placeholder","MyButton","styled","queryList","setQueryList","loaderActive","setLoaderActive","location","useLocation","useSearchParams","searchParams","setSearchParams","console","log","get","useEffect","getData","fetchByQuery","searchResult","length","toast","MyList","trim","search","Loader","MovieList","moviesArray"],"sourceRoot":""}